openapi: 3.0.0
info:
  version: 1.0.0
  title: RentalCar
  contact:
    name: Sviatoslav Chornyi
    email: svitiyck133@gmail.com
   
tags:
  - name: client
    description: Reserved car and see catalog
  - name: administration
    description: 'Delet,update and add cars to the system'
  - name: car
    description: Cars to reserve
  - name: catalog
    description: Access to see order
paths:
  /car:
    put:
      tags:
        - administration
      summary: Car to modify
      operationId: modifyCar
      requestBody:
        description: Car needs to be added to the catalog
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cars'
          application/xml:
            schema:
              $ref: '#/components/schemas/Cars'
        required: true
      responses:
        '400':
          description: Invalid ID supplied
          content: {}
        '404':
          description: Car not found
          content: {}
        '405':
          description: Validation exception
          content: {}
      security:
        - carrental_auth:
            - 'write:cars'
            - 'read:cars'
      x-codegen-request-body-name: body
    post:
      tags:
        - administration
      summary: New car in the catalog
      operationId: appCar
      requestBody:
        description: Car  needs to be added to the rental
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cars'
          application/xml:
            schema:
              $ref: '#/components/schemas/Cars'
        required: true
      responses:
        '405':
          description: Invalid input
          content: {}
      security:
        - carrental_auth:
            - 'write:cars'
            - 'read:cars'
      x-codegen-request-body-name: body
  /car/find:
    get:
      tags:
        - car
      summary: Finds cars
      description: Multiple status values can be provided with comma separated strings
      operationId: find
      parameters:
        - name: status
          in: query
          description: Status values that need to be considered for filter
          required: true
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
              default: available
              enum:
                - available
                - in order
                
      responses:
        '200':
          description: successful operation
          content:
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Cars'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Cars'
        '400':
          description: Invalid status value
          content: {}
      security:
        - carrental_auth:
            - 'write:cars'
            - 'read:cars'
  '/car/{carId}':
    get:
      tags:
        - car
      summary: Id car
      description: Car to renturns
      operationId: caridget
      parameters:
        - name: carId
          in: path
          description: ID of car to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/Cars'
            application/json:
              schema:
                $ref: '#/components/schemas/Cars'
        '400':
          description: Invalid ID supplied
          content: {}
        '404':
          description: Car are not there
          content: {}
      security:
        - api_key: []
    delete:
      tags:
        - administration
      summary: Delete car
      operationId: deleteCar
      parameters:
        - name: api_key
          in: header
          schema:
            type: string
        - name: carId
          in: path
          description: id car to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: Invalid ID supplied
          content: {}
        '404':
          description: Car not found
          content: {}
      security:
        - carrental_auth:
            - 'write:cars'
            - 'read:cars'
 
  /catalog/order:
    post:
      tags:
        - client
      summary: You can to order a car
      operationId: placeOrder
      requestBody:
        description: order the car
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/bookorder'
        required: true
      responses:
        '200':
          description: successful operation
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/bookorder'
            application/json:
              schema:
                $ref: '#/components/schemas/bookorder'
        '400':
          description: Invalid Order
          content: {}
      x-codegen-request-body-name: body
  '/bookorder/order/{orderId}':
    get:
      tags:
        - catalog
      summary: Find client in book order by ID
      description: >-
        For valid response try integer IDs with value >= 1 and <= 10.        
        Other values will generated exceptions
      operationId: getOrderById
      parameters:
        - name: orderId
          in: path
          description: ID of car that needs to be fetched
          required: true
          schema:
            maximum: 10
            minimum: 1
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/bookorder'
            application/json:
              schema:
                $ref: '#/components/schemas/bookorder'
        '400':
          description: Invalid ID supplied
          content: {}
        '404':
          description: Order not found
          content: {}
    delete:
      tags:
        - administration
        - client
      summary: order delete by id
      operationId: deletecustom
      parameters:
        - name: orderId
          in: path
          description: Id can be delete
          required: true
          schema:
            minimum: 1
            type: integer
            format: int64
      responses:
        '400':
          description: Invalid ID supplied
          content: {}
        '404':
          description: custom not found
          content: {}
  /client:
    post:
      tags:
        - client
      summary: Create client
      operationId: createclient
      requestBody:
        description: Created client
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Client'
        required: true
      responses:
        default:
          description: successful
          content: {}
      x-codegen-request-body-name: body
  /administration/login:
    get:
      tags:
        - administration
        - client
      summary: Logining to the system
      operationId: loginClient
      parameters:
        - name: username
          in: query
          description: The user name for login
          required: true
          schema:
            type: string
        - name: password
          in: query
          description: The password for login in clear text
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful
          headers:
            X-Rate-Limit:
              schema:
                type: integer
                format: int32
            X-Expires-After:
              description: date in UTC when token expires
              schema:
                type: string
                format: date-time
          content:
            application/xml:
              schema:
                type: string
            application/json:
              schema:
                type: string
        '400':
          description: Invalid username/password supplied
          content: {}
  /administration/logout:
    get:
      tags:
        - administration
        - client
      summary: Logs out current
      operationId: logoutUser
      responses:
        default:
          description: successful
          content: {}
  '/client/{username}':
    get:
      tags:
        - administration
        - client
      summary: Get user by name
      operationId: getUserByName
      parameters:
        - name: username
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/Client'
            application/json:
              schema:
                $ref: '#/components/schemas/Client'
        '400':
          description: Invalid username supplied
          content: {}
        '404':
          description: User not found
          content: {}
    put:
      tags:
        - client
      summary: Updated client
      description: This can only be done by the logged in user.
      operationId: updateClient
      parameters:
        - name: username
          in: path
          description: name that need to be updated
          required: true
          schema:
            type: string
      requestBody:
        description: Updated user object
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Client'
        required: true
      responses:
        '400':
          description: Invalid user supplied
          content: {}
        '404':
          description: User not found
          content: {}
      x-codegen-request-body-name: body
    delete:
      tags:
        - administration
        - client
      summary: Delete client
      description: This can only be done by the logged in client.
      operationId: deleteClient
      parameters:
        - name: username
          in: path
          description: The name that needs to be deleted
          required: true
          schema:
            type: string
      responses:
        '400':
          description: Invalid username supplied
          content: {}
        '404':
          description: User not found
          content: {}
components:
  schemas:
    bookorder:
      type: object
      properties:
        idclient:
          type: integer
          format: int64
        carId:
          type: integer
          format: int64
       
        shipDate:
          type: string
          format: date-time
        
        cost:
          type: integer
          format: int64
          
        datereturn:
          type: string
          
        
      xml:
        name: Order
    Client:
      type: object
      properties:
        id:
          type: integer
          format: int64
        clientname:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        phone:
          type: string
        password:
          type: string
       
      xml:
        name: Client
        
      
    Cars:
      required:
        - name
        - photoUrls
      type: object
      properties:
        id:
          type: integer
          format: int64
       
        name:
          type: string
          example: mersedec-benz
          items:
            type: string
       
           
        
            
        status:
          type: string
          description: car status in the store
          enum:
            - available
            - in order
            
      xml:
        name: Car
  securitySchemes:
    carrental_auth:
      type: http
      scheme: client
    api_key:
      type: apiKey
      name: key
      in: header
